apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: spin
    app.kubernetes.io/managed-by: halyard
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: spinnaker
    app.kubernetes.io/version: 2.18.0
    cluster: external-redis
  name: external-redis
  namespace: spinnaker
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: spin
      cluster: external-redis
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: spin
        app.kubernetes.io/managed-by: halyard
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: spinnaker
        app.kubernetes.io/version: 2.18.0
        cluster: external-redis
    spec:
      affinity: {}
      containers:
      - env:
        - name: MASTER
          value: "true"
        image: gcr.io/kubernetes-spinnaker/redis-cluster:v2
        imagePullPolicy: IfNotPresent
        lifecycle: {}
        name: redis
        ports:
        - containerPort: 6379
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 6379
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 60
status:
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1